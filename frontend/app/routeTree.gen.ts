/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResetPasswordImport } from './routes/reset-password'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as RegisterTherapistImport } from './routes/register.therapist'
import { Route as RegisterPatientImport } from './routes/register.patient'
import { Route as DashboardTherapistImport } from './routes/dashboard.therapist'
import { Route as DashboardTherapistQueueImport } from './routes/dashboard.therapist.queue'

// Create/Update Routes

const ResetPasswordRoute = ResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterTherapistRoute = RegisterTherapistImport.update({
  id: '/register/therapist',
  path: '/register/therapist',
  getParentRoute: () => rootRoute,
} as any)

const RegisterPatientRoute = RegisterPatientImport.update({
  id: '/register/patient',
  path: '/register/patient',
  getParentRoute: () => rootRoute,
} as any)

const DashboardTherapistRoute = DashboardTherapistImport.update({
  id: '/dashboard/therapist',
  path: '/dashboard/therapist',
  getParentRoute: () => rootRoute,
} as any)

const DashboardTherapistQueueRoute = DashboardTherapistQueueImport.update({
  id: '/queue',
  path: '/queue',
  getParentRoute: () => DashboardTherapistRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/therapist': {
      id: '/dashboard/therapist'
      path: '/dashboard/therapist'
      fullPath: '/dashboard/therapist'
      preLoaderRoute: typeof DashboardTherapistImport
      parentRoute: typeof rootRoute
    }
    '/register/patient': {
      id: '/register/patient'
      path: '/register/patient'
      fullPath: '/register/patient'
      preLoaderRoute: typeof RegisterPatientImport
      parentRoute: typeof rootRoute
    }
    '/register/therapist': {
      id: '/register/therapist'
      path: '/register/therapist'
      fullPath: '/register/therapist'
      preLoaderRoute: typeof RegisterTherapistImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/therapist/queue': {
      id: '/dashboard/therapist/queue'
      path: '/queue'
      fullPath: '/dashboard/therapist/queue'
      preLoaderRoute: typeof DashboardTherapistQueueImport
      parentRoute: typeof DashboardTherapistImport
    }
  }
}

// Create and export the route tree

interface DashboardTherapistRouteChildren {
  DashboardTherapistQueueRoute: typeof DashboardTherapistQueueRoute
}

const DashboardTherapistRouteChildren: DashboardTherapistRouteChildren = {
  DashboardTherapistQueueRoute: DashboardTherapistQueueRoute,
}

const DashboardTherapistRouteWithChildren =
  DashboardTherapistRoute._addFileChildren(DashboardTherapistRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/dashboard/therapist': typeof DashboardTherapistRouteWithChildren
  '/register/patient': typeof RegisterPatientRoute
  '/register/therapist': typeof RegisterTherapistRoute
  '/dashboard/therapist/queue': typeof DashboardTherapistQueueRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/dashboard/therapist': typeof DashboardTherapistRouteWithChildren
  '/register/patient': typeof RegisterPatientRoute
  '/register/therapist': typeof RegisterTherapistRoute
  '/dashboard/therapist/queue': typeof DashboardTherapistQueueRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/dashboard/therapist': typeof DashboardTherapistRouteWithChildren
  '/register/patient': typeof RegisterPatientRoute
  '/register/therapist': typeof RegisterTherapistRoute
  '/dashboard/therapist/queue': typeof DashboardTherapistQueueRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/reset-password'
    | '/dashboard/therapist'
    | '/register/patient'
    | '/register/therapist'
    | '/dashboard/therapist/queue'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/reset-password'
    | '/dashboard/therapist'
    | '/register/patient'
    | '/register/therapist'
    | '/dashboard/therapist/queue'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/reset-password'
    | '/dashboard/therapist'
    | '/register/patient'
    | '/register/therapist'
    | '/dashboard/therapist/queue'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  DashboardTherapistRoute: typeof DashboardTherapistRouteWithChildren
  RegisterPatientRoute: typeof RegisterPatientRoute
  RegisterTherapistRoute: typeof RegisterTherapistRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  DashboardTherapistRoute: DashboardTherapistRouteWithChildren,
  RegisterPatientRoute: RegisterPatientRoute,
  RegisterTherapistRoute: RegisterTherapistRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/reset-password",
        "/dashboard/therapist",
        "/register/patient",
        "/register/therapist"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/reset-password": {
      "filePath": "reset-password.tsx"
    },
    "/dashboard/therapist": {
      "filePath": "dashboard.therapist.tsx",
      "children": [
        "/dashboard/therapist/queue"
      ]
    },
    "/register/patient": {
      "filePath": "register.patient.tsx"
    },
    "/register/therapist": {
      "filePath": "register.therapist.tsx"
    },
    "/dashboard/therapist/queue": {
      "filePath": "dashboard.therapist.queue.tsx",
      "parent": "/dashboard/therapist"
    }
  }
}
ROUTE_MANIFEST_END */
